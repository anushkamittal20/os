package:
  name: tensorflow-gpu
  version: 0_git20241219
  epoch: 1
  description: tensorflow-gpu
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - python-3.11
      - py3.11-pip
      - bash

vars:
  pypi-package: tensorflow-gpu
  prefix: /usr

environment:
  contents:
    packages:
      - build-base
      - busybox
      - py3.11-pip
      - python-3.11
      - cuda-12.3
      - cuda-base-12.3
      - cuda-libraries-12.3
      - cuda-runtime-12.3
      - cuda-command-line-tools-12.3
      - nvidia-cuda-cudart-12.3
      - nvidia-cuda-nvcc-12.3
      - nvidia-cuda-cupti-12.3
      - nvidia-cuda-nvprune-12.3
      - nvidia-cuda-nvrtc-12.3
      - nvidia-libcufft-12.3
      - nvidia-libcurand-12.3
      - nvidia-libcusolver-12.3
      - nvidia-libcusparse-12.3
      - nvidia-libcublas-12.3
    # CuDNN: https://docs.nvidia.com/deeplearning/sdk/cudnn-install/index.html#ubuntu-network-installation
      - nvidia-cudnn-8
    # TODO add CUDA pkgs
    # libnvinfer-plugin8=8.6.1.6-1+cuda12.0
    # libnvinfer8=8.6.1.6-1+cuda12.0
  environment:
    # This is needed to work around the error "ValueError: ZIP does not support timestamps before 1980"
    SOURCE_DATE_EPOCH: 315532800

pipeline:
  - uses: git-checkout
    with:
      expected-commit: d311fe017c036143186f9185f491fa6d6461a84e
      repository: https://github.com/tensorflow/build
      branch: master

  - working-directory: tensorflow_runtime_dockerfiles
    pipeline:
      - name: Install gpu requirements
        runs: |
          python3 -m pip install \
            --no-cache-dir \
            --root ${{targets.contextdir}} \
            --prefix ${{vars.prefix}} \
            -r gpu.requirements.txt

      - name: Install Tensorflow
        runs: |
          python3 -m pip install \
            --no-cache-dir \
            --root ${{targets.contextdir}} \
            --prefix ${{vars.prefix}} \
            ${{vars.pypi-package}}

      - name: Install jupyter requirements
        runs: |
          python3 -m pip install \
            --no-cache-dir \
            --root ${{targets.contextdir}} \
            --prefix ${{vars.prefix}} \
            -r jupyter.requirements.txt \
            -U

      - name: Install bashrc 
        runs: |
          mkdir -p ${{targets.contextdir}}/etc
          cp bashrc ${{targets.contextdir}}/etc/bash.bashrc

      - name: Install tensorflow tutorials
        runs: |
          mkdir -p ${{targets.contextdir}}/tf/tensorflow-tutorials
          cp jupyter.readme.md ${{targets.contextdir}}/tf/tensorflow-tutorials/README.md

      - name: Cleanup pycache
        runs: |
          find . -name '__pycache__' -exec rm -rf {} +

test:
  environment:
    contents:
      packages:
        - curl
  pipeline:
    - name: Test import of IPython kernel for Jupyter
      runs: |
        python3 -m ipykernel.kernelspec
    - name: Test Tensorflow library
      runs: |
        cat <<"EOF" >test.py
        import tensorflow as tf

        # Check TensorFlow version
        print("TensorFlow version:", tf.__version__)

        # Check if TensorFlow can access the GPU
        print("Is built with CUDA:", tf.test.is_built_with_cuda())
        print("Available devices:")
        for device in tf.config.list_physical_devices():
            print(device)

        # Perform a simple computation
        a = tf.constant([1.0, 2.0, 3.0])
        b = tf.constant([4.0, 5.0, 6.0])
        c = tf.add(a, b)
        print("Result of addition:", c.numpy())
        EOF
        python test.py
    - name: Test Juputer notebook run
      runs: |
        jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root >/dev/null 2>&1 &
        pid=$!
        sleep 5
        curl --fail --location --request GET --head --silent localhost:8888
        kill $pid

update:
  enabled: true
  git: {}
  schedule:
    period: daily
    reason: Upstream does not maintain tags or releases
